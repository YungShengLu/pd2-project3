#include "QCandies.h"

QCandies::QCandies(QWidget *parent) : QLabel(parent) {

}

QCandies::QCandies(Candy *candy) {
    this->candy = candy;
}

QString QCandies::getCandy(int num) {
    switch (num) {
    case -1:
        pix = -1;   color = " ";
        return " ";
    case 0:
        pix = 0;    color = "red";
        return ":/Picture/Original/Red.png";
    case 1:
        pix = 1;    color = "blue";
        return ":/Picture/Original/Blue.png";
    case 2:
        pix = 2;    color = "green";
        return ":/Picture/Original/Green.png";
    case 3:
        pix = 3;    color = "yellow";
        return ":/Picture/Original/Yellow.png";
    case 4:
        pix = 4;    color = "orange";
        return ":/Picture/Original/Orange.png";
    case 5:
        pix = 5;    color = "purple";
        return ":/Picture/Original/Purple.png";
    }
}

void QCandies::setCandy() {
    if (candy == NULL) {
        setText("");
    }
    else {
        QString type = getCandy(candy->getCandy());
        QPixmap pixImg(type);
        setPixmap(pixImg);
    }
}

// Events
void QCandies::enterEvent(QEvent *event) {
    setGeometry(this->x(), this->y(), this->width()*1.2, this->height()*1.2);
}

void QCandies::leaveEvent(QEvent *event) {
    setGeometry(this->x(), this->y(), this->width()/1.2, this->height()/1.2);
}

void QCandies::mousePressEvent(QEvent *event) {
    QGraphicsDropShadowEffect *DSE = new QGraphicsDropShadowEffect();
    DSE->setBlurRadius(50);
    DSE->setOffset(-1);

    if (isPress) {
        setGraphicsEffect(NULL);
        isPress = false;
    }
    else {
        DSE->setColor(color);
        setGraphicsEffect(DSE);
        isPress = true;
    }
}
